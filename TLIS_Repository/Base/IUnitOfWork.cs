using System;
using System.Collections.Generic;
using System.Text;
using System.Threading.Tasks;
using TLIS_Repository.IRepository;

namespace TLIS_Repository.Base
{
    public interface IUnitOfWork
    {
        ISubTypeRepository SubTypeRepository { get; }
        IimportSheetRepository ImportSheetRepository { get; }
        ICivilNonSteelTypeRepository CivilNonSteelTypeRepository { get; }
        IBaseTypeRepository BaseTypeRepository { get; }
        ICityRepository CityRepository { get; }
        ISiteRepository SiteRepository { get; }
        ILegRepository LegRepository { get; }
        IDynamicAttLibValueRepository DynamicAttLibValueRepository { get; }
        ICivilWithLegLibraryRepository CivilWithLegLibraryRepository { get; }
        ICivilWithoutLegLibraryRepository CivilWithoutLegLibraryRepository { get; }
        ICivilNonSteelLibraryRepository CivilNonSteelLibraryRepository { get; }
        IDynamicAttRepository DynamicAttRepository { get; }
        IDynamicAttLibRepository DynamicAttLibRepository { get; }
        IDynamicAttInstValueRepository DynamicAttInstValueRepository { get; }
        IValidationRepository ValidationRepository { get; }
        IPowerLibraryRepository PowerLibraryRepository { get; }
        IMW_RFULibraryRepository MW_RFULibraryRepository { get; }
        IMW_ODULibraryRepository MW_ODULibraryRepository { get; }
        IMW_BULibraryRepository MW_BULibraryRepository { get; }
        ISupportTypeImplementedRepository SupportTypeImplementedRepository { get; }
        ISideArmLibraryRepository SideArmLibraryRepository { get; }
        IAttributeActivatedRepository AttributeActivatedRepository { get; }
        IRolePermissionRepository RolePermissionRepository { get; }
        IRoleRepository RoleRepository { get; }
        IUserPermissionRepository UserPermissionRepository { get; }
        IUserRepository UserRepository { get; }
        IGroupUserRepository GroupUserRepository { get; }
        IGroupRoleRepository GroupRoleRepository { get; }
        IGroupRepository GroupRepository { get; }

        ITokenRepository TokenRepository { get; }
        ISectionsLegTypeRepository SectionsLegTypeRepository { get; }
        IStructureTypeRepository StructureTypeRepository { get; }
        ICivilSteelSupportCategoryRepository CivilSteelSupportCategoryRepository { get; }
        IInstCivilwithoutLegsTypeRepository InstCivilwithoutLegsTypeRepository { get; }
        ISupportTypeDesignedRepository SupportTypeDesignedRepository { get; }
        ILogRepository LogRepository { get; }
        //ITaskStatusRepository TaskStatusRepository { get; }
        //ICivilWithLegLibRepository CivilWithLegLibRepository { get; }
        ICivilNonSteelRepository CivilNonSteelRepository { get; }
        ICivilWithoutLegCategoryRepository CivilWithoutLegCategoryRepository { get; }
        IDiversityTypeRepository DiversityTypeRepository { get; }
        IMW_DishLibraryRepository MW_DishLibraryRepository { get; }
        IPolarityTypeRepository PolarityTypeRepository { get; }
        IAsTypeRepository AsTypeRepository { get; }
        IParityRepository ParityRepository { get; }
        IAttActivatedCategoryRepository AttActivatedCategoryRepository { get; }
        IBaseCivilWithLegsTypeRepository BaseCivilWithLegsTypeRepository { get; }
        IOwnerRepository OwnerRepository { get; }
        IGuyLineTypeRepository GuyLineTypeRepository { get; }
        IPermissionRepository PermissionRepository { get; }
        ICivilWithLegsRepository CivilWithLegsRepository { get; }
        ICivilWithoutLegRepository CivilWithoutLegRepository { get; }
        IConditionRepository ConditionRepository { get; }
        IRadioRRULibraryRepository RadioRRULibraryRepository { get; }
        IRadioAntennaLibraryRepository RadioAntennaLibraryRepository { get; }
        IRadioOtherLibraryRepository RadioOtherLibraryRepository { get; }
        ILogisticalitemRepository LogisticalitemRepository { get; }
        IOptionRepository OptionRepository { get; }
        ISubOptionRepository SubOptionRepository { get; }
        IItemStatusRepository ItemStatusRepository { get; }
        ICapacityRepository CapacityRepository { get; }
        ITelecomTypeRepository TelecomTypeRepository { get; }
        ICabinetPowerTypeRepository CabinetPowerTypeRepository { get; }
        ISolarLibraryRepository SolarLibraryRepository { get; }
        IGeneratorLibraryRepository GeneratorLibraryRepository { get; }
        ICabinetTelecomLibraryRepository CabinetTelecomLibraryRepository { get; }
        ICabinetPowerLibraryRepository CabinetPowerLibraryRepository { get; }
        IActorRepository ActorRepository { get; }
        IBaseGeneratorTypeRepository BaseGeneratorTypeRepository { get; }
        IGeneratorRepository GeneratorRepository { get; }
        ISolarRepository SolarRepository { get; }
        IRenewableCabinetTypeRepository RenewableCabinetTypeRepository { get; }
        ICabinetRepository CabinetRepository { get; }
        IOtherInventoryDistanceRepository OtherInventoryDistanceRepository { get; }
        IOtherInSiteRepository OtherInSiteRepository { get; }
        IHistoryTypeRepository HistoryTypeRepository { get; }
        ITablesHistoryRepository TablesHistoryRepository { get; }
        IHistoryDetailsRepository HistoryDetailsRepository { get; }
        ISiteStatusRepository SiteStatusRepository { get; }
        IBoardTypeRepository BoardTypeRepository { get; }
        ILogisticalTypeRepository logisticalTypeRepository { get; }
        IInstallationPlaceRepository InstallationPlaceRepository { get; }
        IRadioRRURepository RadioRRURepository { get; }
        IRadioAntennaRepository RadioAntennaRepository { get; }
        IPolarityOnLocationRepository PolarityOnLocationRepository { get; }
        IItemConnectToRepository ItemConnectToRepository { get; }
        IRepeaterTypeRepository RepeaterTypeRepository { get; }
        IOduInstallationTypeRepository OduInstallationTypeRepository { get; }
        ISideArmInstallationPlaceRepository SideArmInstallationPlaceRepository { get; }
        ISideArmRepository SideArmRepository { get; }
        IDataTypeRepository DataTypeRepository { get; }
        IOperationRepository OperationRepository { get; }
        ILogicalOperationRepository LogicalOperationRepository { get; }
        IMW_BURepository MW_BURepository { get; }
        IMW_DishRepository MW_DishRepository { get; }
        IMW_ODURepository MW_ODURepository { get; }
        IMW_PortRepository MW_PortRepository { get; }
        IMW_RFURepository MW_RFURepository { get; }
        IDynamicListValuesRepository DynamicListValuesRepository { get; }
        IRowRepository RowRepository { get; }
        IRuleRepository RuleRepository { get; }
        IDependencieRepository DependencieRepository { get; }
        IRowRuleRepository RowRuleRepository { get; }
        IDependencyRowRepository DependencyRowRepository { get; }
        IAllCivilInstRepository AllCivilInstRepository { get; }
        ICivilSiteDateRepository CivilSiteDateRepository { get; }
        ICivilSupportDistanceRepository CivilSupportDistanceRepository { get; }
        IMailTemplateRepository MailTemplateRepository { get; }
        IOrderStatusListRepository OrderStatusListRepository { get; }
        //IOrderStatusAddRepository OrderStatusAddRepository { get; }
        //IOrderStatusEditRepository OrderStatusEditRepository { get; }
        IMW_OtherLibraryRepository MW_OtherLibraryRepository { get; }
        IWorkFlowRepository WorkFlowRepository { get; }
        INextStepActionRepository NextStepActionRepository { get; }
        IStepActionItemStatusRepository StepActionItemStatusRepository { get; }
        //IAddWorkFlowRepository AddWorkFlowRepository { get; }
        //IEditWorkFlowRepository EditWorkFlowRepository { get; }
        //IPermissionWorkFlowRepository PermissionWorkFlowRepository { get; }
        //IWorkFlowDeleteRepository WorkFlowDeleteRepository { get; }
        //IListWorkFlowRepository ListWorkFlowRepository { get; }
        IWorkFlowGroupRepository WorkFlowGroupRepository { get; }
        IWorkFlowTypeRepository WorkFlowTypeRepository { get; }
        //IListWorkFlowTypeRepository ListWorkFlowTypeRepository { get; }
        //IAddWorkFlowTypeRepository AddWorkFlowTypeRepository { get; }
        //IEditWorkFlowTypeRepository EditWorkFlowTypeRepository { get; }
        //IDeleteWorkFlowTypeRepository DeleteWorkFlowTypeRepository { get; }
        ITicketRepository TicketRepository { get; }
        ILogistcalRepository LogistcalRepository { get; }
        IIntegrationRepository IntegrationRepository { get; }
        ITicketActionRepository TicketActionRepository { get; }
        ITicketTargetRepository TicketTargetRepository { get; }
        ITicketOptionNoteRepository TicketOptionNoteRepository { get; }
        IAgendaRepository AgendaRepository { get; }
        IAgendaGroupRepository AgendaGroupRepository { get; }

        ILoadOtherLibraryRepository LoadOtherLibraryRepository { get; }
        IStepListRepository StepListRepository { get; }
        IStepAddRepository StepAddRepository { get; }
        IStepEditRepository StepEditRepository { get; }
        IAllOtherInventoryInstRepository AllOtherInventoryInstRepository { get; }
        IActionRepository ActionRepository { get; }
        IStepActionRepository StepActionRepository { get; }
        IStepActionMailFromRepository StepActionMailFromRepository { get; }
        IStepActionIncomeItemStatusRepository StepActionIncomeItemStatusRepository { get; }
        IStepActionGroupRepository StepActionGroupRepository { get; }
        IStepActionPartRepository StepActionPartRepository { get; }
        IStepActionPartGroupRepository StepActionPartGroupRepository { get; }
        IStepActionMailToRepository StepActionMailToRepository { get; }
        IStepActionFileGroupRepository StepActionFileGroupRepository { get; }
        IStepActionOptionRepository StepActionOptionRepository { get; }
        IStepActionItemOptionRepository StepActionItemOptionRepository { get; }
        IPartRepository PartRepository { get; }
        ITablesNamesRepository TablesNamesRepository { get; }
        IActionItemOptionListRepository ActionItemOptionListRepository { get; }
        //IActionItemOptionAddRepository ActionItemOptionAddRepository { get; }
        //IActionItemOptionEditRepository ActionItemOptionEditRepository { get; }
        IAttachedFilesRepository AttachedFilesRepository { get; }
        IEnforcmentCategoryRepository EnforcmentCategoryRepository { get; }
        ILogUsersActionsRepository LogUsersActionsRepository { get; }
        IInstallationTypeRepository InstallationTypeRepository { get; }
        ICivilLoadLegsRepository CivilLoadLegsRepository { get; }
        ICivilLoadsRepository CivilLoadsRepository { get; }
        IAllLoadInstRepository AllLoadInstRepository { get; }
        IAntennaRRUInstRepository AntennaRRUInstRepository { get; }
        IPowerRepository PowerRepository { get; }
        IPowerTypeRepository PowerTypeRepository { get; }
        IMw_OtherRepository Mw_OtherRepository { get; }
        IRadioOtherRepository RadioOtherRepository { get; }
        ILoadOtherRepository LoadOtherRepository { get; }
        ISideArmTypeRepository SideArmTypeRepository { get; }
        IAreaRepository AreaRepository { get; }
        IAttributeViewManagmentRepository AttributeViewManagmentRepository { get; }
        IEditableManagmentViewRepository EditableManagmentViewRepository { get; }
        ITablePartNameRepository TablePartNameRepository { get; }
        IDocumentTypeRepository DocumentTypeRepository { get; }
        IWorkflowHistoryRepository WorkflowHistoryRepository { get; }
        IBaseBURepository BaseBURepository { get; }
        ILocationTypeRepository LocationTypeRepository { get; }
        IRegionRepository RegionRepository { get; }
        IUserPermissionssRepository UserPermissionssRepository { get; }
        IRolePermissionsRepository RolePermissionsRepository { get; }
        int SaveChanges();
        Task<int> SaveChangesAsync();
    }
}
